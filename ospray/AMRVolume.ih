// ======================================================================== //
// Copyright 2009-2015 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

// ospray
#include "ospray/math/AffineSpace.ih"
#include "ospray/geometry/Geometry.ih"

struct range1f {
  float lo, hi;
};

struct AMRCell {
  uniform float ccValue;
  uniform int32 childID;
};

struct AMROctCell {
  uniform AMRCell child[2][2][2];
};

struct AMRVolume {
  Volume    super; //!< inherited from superclass

  /* nothing as yet - we'll simply call back to c++ side ... */

  // root grid dimensions
  vec3i rootDims;
  // array of root cells
  uniform AMRCell *uniform rootCell;
  // array of octree cells
  uniform AMROctCell *uniform octCell;
  // array of cell ranges - note that this includes even leaves,
  // because the _interpolant_ in a cell is not constant, and thus
  // _not_ the same as the leaf cell value itself.
  uniform range1f *uniform octCellRange;
  uniform range1f *uniform rootCellRange;
};

